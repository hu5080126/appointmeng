<template>
    <view class="userinfo">
        <!--<image class="userinfo-avatar" wx:if="{{!hasUserInfo && canIUse && needshow}}"></image>
        <view class="useravatar" wx:if="{{!hasUserInfo && canIUse && needshow}}"><open-data type="userAvatarUrl"></open-data></view>
        <text class="userinfo-nickname" wx:if="{{!hasUserInfo && canIUse && needshow}}"></text>
        <view class="nullview"  wx:if="{{!hasUserInfo && canIUse && needshow}}"> </view>-->
        <view class="useravatar" wx:if="{{needshow}}"><open-data type="userAvatarUrl"></open-data></view>
        <view class="userinfo-nickname" wx:if="{{needshow}}"><open-data type="userNickName"></open-data></view>
        <view class="nullview" wx:if="{{needshow}}"> </view>
        <!--<view style="height: 240rpx" wx:if="{{!hasUserInfo && canIUse && needshow}}"> </view>-->
        <view wx:if="{{!hasUserInfo && canIUse}}" class="userbtn-wrap">
            <view wx:if="{{btnType}}" class="user-btn2">{{title}}</view>
            <button class="{{btnType ? 'userbtn-hide' : 'userbtn'}}" open-type="getUserInfo" bindgetuserinfo="bindUserInfo" >{{title}}</button>
        </view>
        <block wx:else>
            <!--<image class="userinfo-avatar" wx:if="{{needshow}}" src="{{userInfo.avatarUrl}}" background-size="cover"></image>-->
            <!--<view class="useravatar" wx:if="{{needshow}}"><open-data type="userAvatarUrl"></open-data></view>-->
            <!--<text class="userinfo-nickname" wx:if="{{needshow}}">{{userInfo.nickName}}</text>-->
            <view class="userbtn-wrap">
                <view wx:if="{{btnType}}" class="user-btn2">{{title}}</view>
                <button class="{{btnType ? 'userbtn-hide' : 'userbtn'}}" bindtap="userAction" >{{title}}</button>
            </view>
        </block>
    </view>
</template>
<script>
    const app = getApp();

    export default {
        properties: {
            title: String,
            needshow: Boolean,
            btnType: Boolean,
        },
        /**
         * 组件的初始数据
         */
        data: {
            isHasUserTap: false,
            userInfo: {},
            hasUserInfo: false,
            canIUse: wx.canIUse('button.open-type.getUserInfo')
        },
        /**
         * 组件的方法列表
         */
        ready : function() {
            this.initUserInfo();
            console.log("ready : function()", "" + this.properties.btnType)
        },
        methods: {
            wxUseInfo: function () {
                // 获取用户信息
                wx.getSetting({
                    success: res => {
                        if (res.authSetting['scope.userInfo']) {
                            // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
                            wx.getUserInfo({
                                success: res => {
                                    // 可以将 res 发送给后台解码出 unionId
                                    app.globalData.userInfo = res.userInfo

                                    // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
                                    // 所以此处加入 callback 以防止这种情况
                                    this.setData({
                                        userInfo: res.userInfo,
                                        hasUserInfo: true
                                    })
                                    this.updataUser();
                                }
                            })
                        }
                    }
                })
            },
            initUserInfo: function () {
                if (app.globalData.userInfo) {
                    this.setData({
                        userInfo: app.globalData.userInfo,
                        hasUserInfo: true
                    })
                } else if (this.data.canIUse) {
                    // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
                    // 所以此处加入 callback 以防止这种情况
                    this.wxUseInfo();

                } else {
                    // 在没有 open-type=getUserInfo 版本的兼容处理
                    wx.getUserInfo({
                        success: res => {
                            if (res.userInfo) {
                                app.globalData.userInfo = res.userInfo
                                this.setData({
                                    userInfo: res.userInfo,
                                    hasUserInfo: true
                                })
                                this.updataUser();
                            }
                        }
                    })
                }
            },
            bindUserInfo: function (e) {
                this.setData({
                    isHasUserTap: true
                });
                if (e.detail.userInfo)
                {
                    app.globalData.userInfo = e.detail.userInfo
                    this.setData({
                        userInfo: e.detail.userInfo,
                        hasUserInfo: true
                    })
                    this.updataUser();
                }
            },
            updataUser: function () {
                if (this.data.isHasUserTap)
                {
                    this.triggerEvent('updataUser', this.data.userInfo);
                }
            },
            userAction: function () {
                this.triggerEvent('updataUser', this.data.userInfo);
            }
        },
    }
</script>
<style>
    .userbtn-wrap{
        position: relative;
        margin-top: 20rpx;
    }
    .userbtn {
        width: 400rpx;
        /*height: 100rpx;*/
        /*line-height: 100rpx;*/
        background-color: #0bb27a;
        color:white;
    }
    .userbtn-hide{
        position: absolute;
        top: 0;
        left: 0;
        opacity:0;
    }
    .user-btn2{
        width: 50%;
        margin: auto;

        height: 80rpx;
        line-height: 80rpx;
        color: #f76285;
        border: 0rpx;
        text-align: center;
    }
    .userinfo {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .userinfo-avatar {
        width: 128rpx;
        height: 128rpx;
        margin: 20rpx;
        border-radius: 50%;
    }

    .useravatar {
        width: 128rpx;
        height: 128rpx;
        margin: 20rpx;
        border-radius: 50%;
        clip-path: circle(50% at center);
    }

    .userinfo-nickname {
        color: #aaa;
    }

    .nullview {
        height: 40rpx;
    }
</style>